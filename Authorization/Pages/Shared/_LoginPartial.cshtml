@using Microsoft.AspNetCore.Identity
@using Authorization.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
            <a id="manage" class="nav-link text-primary" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
    </li>
    <li class ="nav-item">
            <a href="/User" class="nav-link btn btn-link text-dark border-0">User Info</a><br />
            
    </li>
        if (User.IsInRole("admin"))
        {   <li class="nav-item">
                <a href="/WeatherForecast" class="nav-link btn btn-link text-dark border-0">Weather Forecast</a><br />
            </li>
        }

    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Log out</button>
        </form>
    </li>
        
    }
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Log in</a>
    </li>
}
</ul>
